--[[
Name: "cl_config.lua".
Product: "nexus".
--]]

nexus.config.SetOverwatch("mysql_characters_table", "The name of the table where the character data is stored.");
nexus.config.SetOverwatch("mysql_players_table", "The name of the table where the player data is stored.");
nexus.config.SetOverwatch("mysql_username", "The username that you log in to MySQL with.");
nexus.config.SetOverwatch("mysql_password", "The password that you log in to MySQL with.");
nexus.config.SetOverwatch("mysql_database", "The name of the database that we'll be using.");
nexus.config.SetOverwatch("mysql_host", "The host that your MySQL database is located.");
nexus.config.SetOverwatch("scale_attribute_progress", "The amount to scale attribute progress by.");
nexus.config.SetOverwatch("messages_must_see_player", "The amount to scale attribute progress by.");
nexus.config.SetOverwatch("messages_must_see_player", "Whether or not you must see a player to hear some in-character messages.");
nexus.config.SetOverwatch("default_attribute_points", "The default amount of attribute points that a player has.");
nexus.config.SetOverwatch("enable_temporary_damage", "Whether or not temporary damage is enabled.");
nexus.config.SetOverwatch("enable_prop_protection", "Whether or not to enable prop protection.");
nexus.config.SetOverwatch("use_local_machine_date", "Whether or not to use the local machine's date when the map is loaded.");
nexus.config.SetOverwatch("use_local_machine_time", "Whether or not to use the local machine's time when the map is loaded.");
nexus.config.SetOverwatch("use_opens_entity_menus", "Whether or not 'use' opens the context menus.");
nexus.config.SetOverwatch("shoot_after_raise_time", "The time that it takes for players to be able to shoot after raising their weapon (seconds).\nSet to 0 for no time.");
nexus.config.SetOverwatch("save_recognised_names", "Whether or not recognised names should be saved.");
nexus.config.SetOverwatch("save_attribute_boosts", "Whether or not attribute boosts are saved.");
nexus.config.SetOverwatch("ragdoll_immunity_time", "The time that a player's ragdoll is immune from damage (seconds).");
nexus.config.SetOverwatch("additional_characters", "The additional amount of characters that each player can have.");
nexus.config.SetOverwatch("change_class_interval", "The time that a player has to wait to change class again (seconds).", 0, 7200);
nexus.config.SetOverwatch("raised_weapon_system", "Whether or not the raised weapon system is enabled.");
nexus.config.SetOverwatch("prop_kill_protection", "Whether or not prop kill protection is enabled.");
nexus.config.SetOverwatch("nexus_intro_enabled", "Enable the nexus introduction for new players.");
nexus.config.SetOverwatch("use_optimised_rates", "Whether or not to use nexus optimised rates.");
nexus.config.SetOverwatch("generator_interval", "The time that it takes for generator cash to be distrubuted (seconds).", 0, 7200);
nexus.config.SetOverwatch("enable_gravgun_punt", "Whether or not to enable entities to be punted with the gravity gun.");
nexus.config.SetOverwatch("default_inv_weight", "The default inventory weight (kilograms).");
nexus.config.SetOverwatch("save_data_interval", "The time that it takes for data to be saved (seconds).", 0, 7200);
nexus.config.SetOverwatch("damage_view_punch", "Whether or not a player's view gets punched when they take damage.");
nexus.config.SetOverwatch("unrecognised_name", "The name that is given to unrecognised players.");
nexus.config.SetOverwatch("scale_fall_damage", "The amount to scale fall damage by.");
nexus.config.SetOverwatch("default_cash", "The default amount of cash that each player starts with.", 0, 10000);
nexus.config.SetOverwatch("armor_chest_only", "Whether or not armor only affects the chest.");
nexus.config.SetOverwatch("minimum_physdesc", "The minimum amount of characters a player must have in their physical description.", 0, 128);
nexus.config.SetOverwatch("wood_breaks_fall", "Whether or not wooden physics entities break a player's fall.");
nexus.config.SetOverwatch("enable_crosshair", "Whether or not the crosshair is enabled.");
nexus.config.SetOverwatch("recognise_system", "Whether or not the recognise system is enabled.");
nexus.config.SetOverwatch("cash_enabled", "Whether or not cash is enabled.");
nexus.config.SetOverwatch("default_physdesc", "The physical description that each player begins with.");
nexus.config.SetOverwatch("scale_chest_dmg", "The amount to scale chest damage by.");
nexus.config.SetOverwatch("body_decay_time", "The time that it takes for a player's ragdoll to decay (seconds).", 0, 7200);
nexus.config.SetOverwatch("banned_message", "The message that a player receives when trying to join while banned.\n!t for the time left, !f for the time format.");
nexus.config.SetOverwatch("wages_interval", "The time that it takes for wages cash to be distrubuted (seconds).", 0, 7200);
nexus.config.SetOverwatch("scale_prop_cost", "How to much to scale prop cost by.\nSet to 0 to to make props free.");
nexus.config.SetOverwatch("fade_dead_npcs", "Whether or not to fade dead NPCs.");
nexus.config.SetOverwatch("cash_weight", "The weight of cash (kilograms).", 0, 100, 3);
nexus.config.SetOverwatch("scale_head_dmg", "The amount to scale head damage by.");
nexus.config.SetOverwatch("block_inv_binds", "Whether or not inventory binds should be blocked for players.");
nexus.config.SetOverwatch("scale_limb_dmg", "The amount to scale limb damage by.");
nexus.config.SetOverwatch("enable_headbob", "Whether or not to enable headbob.");
nexus.config.SetOverwatch("command_prefix", "The prefix that is used for chat commands.");
nexus.config.SetOverwatch("crouched_speed", "The speed that characters walk at when crouched.", 0, 1024);
nexus.config.SetOverwatch("default_flags", "The flags that each player begins with.");
nexus.config.SetOverwatch("disable_sprays", "Whether players can spray their tags.");
nexus.config.SetOverwatch("hint_interval", "The time that a hint is displayed to each player (seconds).", 0, 7200);
nexus.config.SetOverwatch("ooc_interval", "The time that a player has to wait to speak out-of-character again (seconds).\nSet to 0 for never.", 0, 7200);
nexus.config.SetOverwatch("minute_time", "The time that it takes for a minute to pass (seconds).", 0, 7200);
nexus.config.SetOverwatch("unlock_time", "The time that a player has to wait to unlock a door (seconds).", 0, 7200);
nexus.config.SetOverwatch("local_voice", "Whether or not to enable local voice.");
nexus.config.SetOverwatch("talk_radius", "The radius of each player that other characters have to be in to hear them talk (units).", 0, 4096);
nexus.config.SetOverwatch("wages_name", "The name that is given to wages.");
nexus.config.SetOverwatch("jump_power", "The power that characters jump at.", 0, 1024);
nexus.config.SetOverwatch("spawn_time", "The time that a player has to wait before they can spawn again (seconds).", 0, 7200);
nexus.config.SetOverwatch("walk_speed", "The speed that characters walk at.", 0, 1024);
nexus.config.SetOverwatch("run_speed", "The speed that characters run at.", 0, 1024);
nexus.config.SetOverwatch("door_cost", "The amount of cash that each door costs.");
nexus.config.SetOverwatch("lock_time", "The time that a player has to wait to lock a door (seconds).", 0, 7200);
nexus.config.SetOverwatch("max_doors", "The maximum amount of doors a player can own.");