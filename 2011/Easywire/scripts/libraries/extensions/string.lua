--[[	© 2011 CloudSixteen.com do not share, re-distribute or modify	this file without the permission of its owner(s).--]]-- A function to explode text by a seperator.function string.Explode(seperator, text, bPatterns, Callback)    if (seperator == "") then			local retTable = {};			for i = 1, #text do				retTable[i] = string.sub(text, i, i);			end;		return retTable;	end;        local retTable = {}    local index, lastPos = 1, 1;	    if (not bPatterns) then		seperator = string.gsub(seperator, "[%-%^%$%(%)%%%.%[%]%*%+%-%?]", "%%%1");	end;         for startPos, endPos in string.gmatch(text, "()"..seperator.."()") do        if (Callback) then			retTable[index] = Callback( string.sub(text, lastPos, startPos - 1) );		else			retTable[index] = string.sub(text, lastPos, startPos - 1);		end;		        lastPos = endPos;        index = index + 1;    end;		if (Callback) then		retTable[index] = Callback( string.sub(text, lastPos) );	else		retTable[index] = string.sub(text, lastPos);	end;	    return retTable;end;-- A function to get the text between tags.function string.GetBetweenTags(text, startTag, endTag)	text = string.Trim(text);		if (not endTag) then		endTag = startTag;	end;		if (string.sub( text, 0, string.len(startTag) ) == startTag	and string.sub( text, -string.len(endTag) ) == endTag) then		return ( string.sub(text, string.len(startTag) + 1, -(string.len(endTag) + 1) ) );	end;end;-- A function to trim a character from some text.function string.Trim(text, trimChar)	if (not trimChar) then trimChar = "%s"; end;	return ( string.gsub(text, "^"..trimChar.."*(.-)"..trimChar.."*$", "%1") );end