--[[	© 2011-2012 CloudSixteen.com do not share, re-distribute or modify	this file without the permission of its owner(s).
	Conna Wiles (connawiles@gmail.com)--]]timers = {};timers.m_list = {};-- A function to add a timer.function timers.Add(uniqueID, delay, repetitions, Callback, ...)	timers.m_list[uniqueID] = {		repetitions = repetitions,		arguments = {...},		Callback = Callback,		nextCall = time.CurTime() + delay,		delay = delay	};end;-- A function to get whether a timer exists.function timers.Exists(uniqueID)	return (timers.m_list[uniqueID] ~= nil);end;-- A function to remove a timer.function timers.Remove(uniqueID)	timers.m_list[uniqueID] = nil;end;-- A function to clear the timers.function timers.Clear()	timers.m_list = {};end;-- A function to update the timers.function timers.Update(deltaTime)	local curTime = time.CurTime();		for k, v in pairs(timers.m_list) do		if (curTime >= v.nextCall) then			local success, retVal = pcall(v.Callback, unpack(v.arguments));						if (not success) then				lua.Print(retVal);			end;						v.nextCall = curTime + v.delay;						if (v.repetitions > 0) then				v.repetitions = v.repetitions - 1;								if (v.repetitions == 0) then					timers.m_list[k] = nil;				end;			end;		end;	end;end;hooks.Add("UpdateGame", "Timers", timers.Update);