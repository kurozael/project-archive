--[[	© 2011-2012 CloudSixteen.com do not share, re-distribute or modify	this file without the permission of its owner(s).
	Conna Wiles (connawiles@gmail.com)--]]damage = {};damage.m_class = {};damage.m_class.__index = damage.m_class;-- Called when the damage info is constructed.function damage.m_class:__init()	self.m_iType = DAMAGE_WORLD;	self.m_iForce = 0;	self.m_victim = nil;	self.m_iDamage = 0;	self.m_position = Vec2(0, 0);	self.m_attacker = nil;	self.m_inflictor = nil;end;-- A function to scale the damage info damage.function damage.m_class:ScaleDamage(scaleBy)	self.m_iDamage = self.m_iDamage * scaleBy;end;util.AddAccessor(damage.m_class, "Type", "m_iType");util.AddAccessor(damage.m_class, "Force", "m_iForce");util.AddAccessor(damage.m_class, "Victim", "m_victim");util.AddAccessor(damage.m_class, "Damage", "m_iDamage");util.AddAccessor(damage.m_class, "Position", "m_position");util.AddAccessor(damage.m_class, "Attacker", "m_attacker");util.AddAccessor(damage.m_class, "Inflictor", "m_inflictor");-- A function to attack an entity.function damage.AttackEntity(damageType, victim, attacker, inflictor, position, amount, force)	damageType = damageType or DAMAGE_WORLD;	inflictor = inflictor or attacker;	attacker = attacker or inflictor;	position = position or victim:GetCenter();	amount = amount or 0;	force = force or util.NormalizeVector(victim:GetCenter() - attacker:GetCenter());		local damageInfo = damage.New();		damageInfo:SetInflictor(inflictor);		damageInfo:SetPosition(position);		damageInfo:SetAttacker(attacker);		damageInfo:SetDamage(amount);		damageInfo:SetVictim(victim);		damageInfo:SetForce(force);		damageInfo:SetType(damageType);	victim:TakeDamage(damageInfo);		return damageInfo;end;-- A function to get a new damage info.function damage.New()	local object = {};		setmetatable(object, damage.m_class);	object:__init();		return object;end;