--[[	© 2011-2012 CloudSixteen.com do not share, re-distribute or modify	this file without the permission of its owner(s).
	Conna Wiles (connawiles@gmail.com)--]]draw = {};GRADIENT_MILD = Gradient(	Color(1, 1, 1, 0.4), Color(1, 1, 1, 0.4),	Color(1, 1, 1, 0.1), Color(1, 1, 1, 0.1));-- A function to draw a rotated image.function draw.RotatedImage(image, x, y, w, h, color, angle, pivot)	local graphics = display.Graphics();		pivot = pivot or Vec2(x + (w / 2), y + (h / 2));	angle = angle or util.Degrees(0);		w = w or image:GetW();	h = h or image:GetH();		graphics:PushRotation(angle, pivot);		render.DrawImage(image, x, y, w, h, color);	graphics:PopRotation();end;-- A function to draw a rotated texture.function draw.RotatedTexture(texture, x, y, w, h, color, angle, pivot)	local graphics = display.Graphics();		pivot = pivot or Vec2(x + (w / 2), y + (h / 2));	angle = angle or util.Degrees(0);		w = w or image:GetW();	h = h or image:GetH();		graphics:PushRotation(angle, pivot);		render.DrawTexture(texture, x, y, w, h, color);	graphics:PopRotation();end;-- A function to draw simple text.function draw.SimpleText(fontName, x, y, text, color, bReturnSize)	local fontObject = fonts.GetFont(fontName);	fontObject:DrawText(x, y, text, color);		if (bReturnSize) then		local fontSize = fontObject:GetTextSize(text);		return x, y, fontSize.w, fontSize.h;	else		return fontObject;	end;end;-- A function to draw shadowed text.function draw.ShadowedText(fontName, x, y, text, color, shadowColor, bReturnSize, bAlignH, bAlignV)	local fontObject = fonts.GetFont(fontName);	local fontSize = fontObject:GetTextSize(text);		if (bAlignH) then x = x - (fontSize.w / 2); end;	if (bAlignV) then y = y - (fontSize.h / 2); end;		fontObject:DrawText(x + 1, y + 1, text, shadowColor);	fontObject:DrawText(x, y, text, color);		if (bReturnSize) then		return x, y, fontSize.w, fontSize.h;	else		return fontObject;	end;end;-- A function to draw a tiled image.function draw.TiledImage(image, x, y, w, h, color, forceSize)	local graphics = display.Graphics();		local imgWidth = forceSize;	local imgHeight = forceSize;		if (not forceSize) then		imgWidth = image:GetW();		imgHeight = image:GetH();				if (imgWidth > w) then			imgWidth = w;			imgHeight = math.ceil(imgHeight * (w / imgHeight));		elseif (imgHeight > h) then			imgHeight = h;			imgWidth = math.ceil(imgWidth * (h / imgWidth));		end;	end;		if (imgWidth == w and imgHeight == h) then		render.DrawImage(image, x, y, imgWidth, imgHeight, color);		return;	end;		local numTilesX = math.ceil(w / imgWidth);	local numTilesY = math.ceil(h / imgHeight);		graphics:PushClipRect(Rect(x, y, x + w, y + h));		for a = 0, numTilesX - 1 do			for b = 0, numTilesY - 1 do				render.DrawImage(image, x + (a * imgWidth), y + (b * imgHeight), imgWidth, imgHeight, color);			end;		end;	graphics:PopClipRect();end;-- A function to draw a styled box.function draw.StyledBox(x, y, w, h, color, bNoBorders, bNoBackground)	if (not bNoBackground) then		render.DrawFill(x, y, w, h, color);		render.DrawGradientFill(x, y, w, h, GRADIENT_MILD);	end;		if (not bNoBorders) then		render.DrawBox(x, y, w, h, Color(0, 0, 0, 0.5));		render.DrawBox(x + 1, y + 1, w - 2, h - 2, Color(1, 1, 1, 0.2));	end;end;